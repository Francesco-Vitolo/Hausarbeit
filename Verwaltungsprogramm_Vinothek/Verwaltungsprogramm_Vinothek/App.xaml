<Application x:Class="Verwaltungsprogramm_Vinothek.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Verwaltungsprogramm_Vinothek"
             xmlns:properties="clr-namespace:Verwaltungsprogramm_Vinothek.Properties"
             StartupUri="Windows\Window_Anmelden.xaml">
    <Application.Resources>

        <Style TargetType="Calendar" x:Key="Default_Calendar">
            <Setter Property="Background" Value="{Binding Path=Background, Source={x:Static properties:Settings.Default}}"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, Source={x:Static properties:Settings.Default}}"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border BorderThickness="1" BorderBrush="Black">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </Border.Style>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Margin="2">
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <!--<Setter Property="Background" Value="{Binding Path=Color2, Source={x:Static properties:Settings.Default}}" TargetName="PART_ContentHost"/>-->
                                <Setter Property="Background" Value="{Binding Path=LinearGradientBrush, Source={x:Static properties:Settings.Default}}" TargetName="PART_ContentHost"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="PART_ContentHost"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{Binding Path=Foreground, Source={x:Static properties:Settings.Default}}"/>
        </Style>
        
        <Style TargetType="CheckBox">
            <Setter Property="BorderBrush" Value="Black"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="4"/>
                    <Setter Property="Padding" Value="2"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Separator" x:Key="SepVertical">
            <Setter Property="LayoutTransform" Value="90"/>
        </Style>
        <Style TargetType="Border" x:Key="Border">
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style TargetType="Image">
            <Setter Property="MaxHeight" Value="50"/>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Background" Value="{Binding Path=Background, Source={x:Static properties:Settings.Default}}"/>
            <Setter Property="ItemsSource" Value="{Binding }" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="SelectedIndex" Value="0"/>
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="4"/>
                </Style>
                <Style TargetType="DataGridCell">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Foreground" Value="{Binding Path=Foreground, Source={x:Static properties:Settings.Default}}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True" ><!--Value="Gainsboro"-->
                            <Setter Property="Background" Value="{Binding Path=Color2, Source={x:Static properties:Settings.Default}}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                    <!--<Setter Property="Background" Value="{Binding Path=Background, Source={x:Static properties:Settings.Default}}" />-->
                </Style>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Padding" Value="4" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                <GradientStop Color="White" Offset="0" />
                                <GradientStop Color="LightSlateGray" Offset="0.1" />
                                <GradientStop Color="Transparent" Offset="0.2"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Background" Value="{Binding Path=Background, Source={x:Static properties:Settings.Default}}" />
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="DataGridCellsPanel">
            <Setter Property="Background" Value="{Binding Path=Background, Source={x:Static properties:Settings.Default}}" />
        </Style>

        <!--<Style TargetType="DataGridCellsPresenter">
            <Setter Property="Background" Value="{Binding Path=Background, Source={x:Static properties:Settings.Default}}" />
        </Style>-->



        <Style TargetType="ComboBox" x:Key="cb_Style">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Resources>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Background" Value="{Binding Path=Background, Source={x:Static properties:Settings.Default}}"/>
                    <Style.Resources>
                        <Style TargetType="Border" BasedOn="{StaticResource Border}"/>
                    </Style.Resources>
                    <!--<Style.Triggers>
                        <Trigger Property="IsSelected" Value="True" >
                            --><!--Value="Gainsboro"--><!--
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>-->
                    <!--</Style.Triggers>-->
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="Window_Default" TargetType="Window">
            <Setter Property="Background" Value="{Binding Path=Background, Source={x:Static properties:Settings.Default}}"/>
            <Setter Property="Foreground" Value="{Binding Path=Foreground, Source={x:Static properties:Settings.Default}}"/>
            <Setter Property="Icon" Value="..\..\Pictures\favicon.ico"/>
            <!--<Setter Property="FontStyle" Value="Italic"/>-->
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Height" Value="1080"/>
            <Setter Property="Width" Value="1600"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="WindowChrome.GlassFrameThickness" Value="0"/>
            <Setter Property="WindowChrome.CornerRadius" Value="0"/>
            <Setter Property="WindowChrome.CaptionHeight" Value="0"/>
            <Setter Property="WindowChrome.ResizeBorderThickness" Value="0"/>
        </Style>

        <Style TargetType="Button" x:Key="Button_Kunden">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontSize" Value="32" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <!--BorderThickness="1" BorderBrush="Black" Margin="10" Height="150" Width="250">-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <!--<Setter Property="BorderBrush" Value="Black"/>-->
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="Padding" Value="10"/>
                                </Style>
                            </Border.Style>
                        </Border>

                        <!--<ControlTemplate.Triggers>
                            --><!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="FontWeight" Value="ExtraBold"/>
                            </Trigger>--><!--
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Frame">
            <Setter Property="NavigationUIVisibility" Value="Hidden"/>
        </Style>

        <Style TargetType="Button" x:Key="Button_Style2">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{Binding Path=LinearGradientBrush, Source={x:Static properties:Settings.Default}}"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="1" BorderBrush="Black" CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource Button_Style2}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Height" Value="75"/>
            <Setter Property="Width" Value="75"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="1" BorderBrush="Black" CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="3" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" From="75" To="100" Duration="0:0:0.2" ></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" From="75" To="60" Duration="0:0:0.2" ></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" From="100" To="75" Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetProperty="Height" From="60" To="75" Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="Button_TextContent" BasedOn="{StaticResource Button_Style2}">
            <Setter Property="Content" Value="übernehmen"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="42"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True" >
                    <Setter Property="FontStyle" Value="Italic" />
                </Trigger>
            </Style.Triggers>
        </Style>
        

        <!--<Style TargetType="Button" BasedOn="{StaticResource Button_Style2}"> --><!--x:Key="Button_Style_With_Animation"--><!--
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width" From="75" To="100" Duration="0:0:0.2" ></DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="75" To="60" Duration="0:0:0.2" ></DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width" From="100" To="75" Duration="0:0:0.1" />
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="60" To="75" Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>-->

        <Style TargetType="Button" x:Key="Button_Titlebar">
            <Setter Property="Height" Value="26"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <!--<Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" >
                        <GradientStop Color="#FF1E40DA" Offset="0" />
                        <GradientStop Color="#FF2FBFF5" Offset="0.8" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>-->
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="AnimationImage" TargetType="Image">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="0" CenterX="20" CenterY="20" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                    Storyboard.TargetProperty="RenderTransform.Angle"
                                    From="0" To="360" 
                                    Duration="0:0:1.5" 
                                    RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
            <Setter Property="Margin" Value="0,3,0,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarItem}">
                        <ControlTemplate.Resources>
                            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                                <TextBlock 
                                Foreground="Red"
                                FontWeight="Bold"
                                FontSize="9.5"
                                FontFamily="Verdana"
                                Margin="0,6,0,6"
                                Text="{Binding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                            </DataTemplate>
                        </ControlTemplate.Resources>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
